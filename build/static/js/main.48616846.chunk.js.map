{"version":3,"sources":["reducers/notificationReducer.js","components/Notification.js","hooks/index.js","utils/localdb.js","reducers/userReducer.js","services/login.js","components/LoginForm.js","components/BlogForm.js","components/BlogList.js","components/Menu.js","components/UserList.js","components/User.js","components/Home.js","services/blogs.js","reducers/blogReducer.js","components/Blog.js","services/users.js","reducers/usersReducer.js","App.js","store.js","index.js"],"names":["timeoutId","Notification","notification","useSelector","state","console","log","message","className","Alert","severity","useField","type","useState","value","setValue","param","onChange","event","target","reset","user","localStorage","setItem","JSON","stringify","parse","getItem","removeItem","clear","userLogin","dispatch","a","localDB","token","data","userReducer","action","setNotification","color","clearTimeout","setTimeout","notificationReducer","login","credentials","axios","post","response","LoginForm","useDispatch","history","useHistory","username","password","handleLogin","preventDefault","loginService","name","push","Form","onSubmit","Group","Label","Control","id","Button","variant","BlogForm","createBlog","visible","setVisible","hideWhenVisible","display","showWhenVisible","title","author","url","addBlog","Table","striped","style","onClick","placeholder","pattern","BlogList","blogs","sort","b","likes","bordered","hover","map","blog","to","Menu","handleLougout","padding","paddingRight","UserList","users","length","User","paramId","useParams","find","u","Home","href","baseUrl","getConfig","headers","Authorization","localdb","getAll","get","create","newBlog","update","updatedObject","put","remove","delete","addComment","commentedBlog","request","blogReducer","concat","toChange","changedBlog","filter","blogToComment","comments","Blog","showTextarea","submitComment","text","document","getElementById","blogService","updatedBlog","commentBlog","TableContainer","component","Paper","TableHead","TableRow","TableCell","align","colSpan","TableBody","likeBlog","window","confirm","deleteBlog","comment","i","then","usersReducer","App","useEffect","userService","path","blogObject","newBlogwUser","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.48616846.chunk.js","sourcesContent":["const notificationReducer = (state = [], action) => {\n  //console.log('NOTIFICATIONreducer STATE:', state)\n  //console.log('NOTIFICATIONreducer ACTION:', action.type)\n  switch (action.type) {\n  case 'SET_NOTIFICATION':\n    return action.data\n  case 'CLEAR_NOTIFICATION':\n    return []\n  default:\n    return state\n  }\n}\n\nlet timeoutId\n\nexport const setNotification = (message, color) => {\n  return async (dispatch) => {\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      data: {\n        message: message,\n        color: color,\n      },\n    })\n\n    if (timeoutId) {\n      clearTimeout(timeoutId)\n    }\n\n    timeoutId = setTimeout(() => {\n      dispatch({\n        type: 'CLEAR_NOTIFICATION',\n      })\n    }, 10000)\n  }\n}\n\nexport const clearNotification = () => ({ type: 'CLEAR_NOTIFICATION' })\n\nexport default notificationReducer\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n//import Alert from 'react-bootstrap/Alert'\nimport { Alert } from '@material-ui/lab'\n\nconst Notification = () => {\n  const notification = useSelector((state) => state.notification)\n  console.log('NOTIFICATION INSIDE COMPONENT:', notification)\n\n  const message = notification.message\n  //const colorClass = notification.color;\n\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"container\">\n      {(message &&\n        <Alert severity=\"success\">\n          {message}\n        </Alert>\n      )}\n    </div>\n  )\n}\n\nexport default Notification\n","import { useState } from 'react'\n\nexport const useField = (type) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const reset = () => {\n    setValue('')\n  }\n\n  return { param: { type, value, onChange }, reset }\n}","const saveUser = (user) => {\n  localStorage.setItem('loggedBlogUser', JSON.stringify(user))\n}\n\nconst loadUser = () => {\n  return JSON.parse(localStorage.getItem('loggedBlogUser'))\n}\n\nconst removeUser = () => {\n  localStorage.removeItem('loggedBlogUser')\n  localStorage.clear()\n}\n\nexport default { saveUser, loadUser, removeUser }\n","import localDB from '../utils/localdb'\n\nconst userReducer = (state = localDB.loadUser(), action) => {\n  //console.log('ACTION DATA IN userREDUCER:', action.data)\n  //console.log('STATE OF STATE IN userREDUCER:',state)\n  switch (action.type) {\n  case 'LOGIN':\n    return action.data\n  case 'LOGOUT':\n    return null\n  default:\n    return state\n  }\n}\n\nexport const userLogin = (user) => {\n  return async (dispatch) => {\n    localDB.saveUser(user)\n    console.log('USER TOKEN', user.token)\n    dispatch({\n      type: 'LOGIN',\n      data: user,\n    })\n  }\n}\n\nexport const userLogout = () => {\n  return async (dispatch) => {\n    localDB.removeUser()\n    dispatch({\n      type: 'LOGOUT',\n    })\n  }\n}\n\nexport default userReducer\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","import React from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { useField } from '../hooks/index'\nimport { userLogin } from '../reducers/userReducer'\n//components\nimport { setNotification } from '../reducers/notificationReducer'\n// services\nimport loginService from '../services/login'\n\nconst LoginForm = () => {\n  const dispatch = useDispatch()\n  const  history = useHistory()\n  const username = useField('usarname')\n  const password = useField('password')\n\n  const credentials = {\n    username: username.param.value,\n    password: password.param.value,\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      var user = await loginService.login(credentials)\n      dispatch(userLogin(user))\n      dispatch(setNotification(`logged in, welcome back ${user.name}`, 'success'))\n      history.push('/blogs')\n    } catch (exception) {\n      dispatch(setNotification('wrong username or password', 'error'))\n    }\n  }\n\n  return (\n    <div>\n      <Form onSubmit={handleLogin}>\n        <Form.Group>\n          <Form.Label>{'username:'}</Form.Label>\n          <Form.Control id=\"username\" name=\"Username\" {...username.param} />\n          <Form.Label>{'password:'}</Form.Label>\n          <Form.Control id=\"password\" name=\"Password\" type=\"password\" {...password.param} />\n        </Form.Group>\n        <Button variant=\"primary\" id=\"login-button\" type=\"submit\">\n          {'login'}\n        </Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default LoginForm\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { useField } from '../hooks/index'\nimport { Table, Form, Button } from 'react-bootstrap'\n\nconst BlogForm = ({ createBlog }) => {\n  const [visible, setVisible] = useState(false)\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n  const title = useField('title')\n  const author = useField('author')\n  const url = useField('url')\n\n  const addBlog = async (event) => {\n    event.preventDefault()\n    createBlog({\n      url: url.param.value,\n      title: title.param.value,\n      author: author.param.value,\n    })\n    title.reset()\n    author.reset()\n    url.reset()\n  }\n\n  return (\n    <div className=\"container\">\n      <Form onSubmit={addBlog}>\n        <Table striped  >\n          <tbody style={hideWhenVisible}>\n            <tr >\n              <td><Button id=\"newblog-button\" variant=\"primary\" onClick={() => setVisible(!visible)}>{'new blog'}</Button></td>\n            </tr>\n          </tbody>\n          <tbody style={showWhenVisible}>\n            <tr>\n              <td><Form.Label>{'title:'}</Form.Label></td>\n              <td>\n                <Form.Control id=\"title\" name=\"Title\" {...title.param} />\n              </td>\n            </tr>\n            <tr>\n              <td><Form.Label>{'author:'}</Form.Label></td>\n              <td>\n                <Form.Control id=\"author\" name=\"Author\" {...author.param} />\n              </td>\n              <th>\n              </th>\n            </tr>\n            <tr>\n              <td><Form.Label>{'url:'}</Form.Label></td>\n              <td>\n                <Form.Control id=\"url\" name=\"url\" placeholder=\"http://example.com\" pattern=\"http://.*\"\n                  {...url.param}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td><Button id=\"create-button\" variant=\"primary\" type=\"submit\">{'create'}</Button></td>\n              <td><Button id=\"cancel-button\" variant=\"primary\" onClick={() => setVisible(!visible)}>{'cancel'}</Button></td>\n            </tr>\n          </tbody>\n        </Table>\n      </Form>\n\n    </div>\n  )\n}\n\nBlogForm.propTypes = {\n  createBlog: PropTypes.func.isRequired,\n}\n\nexport default BlogForm\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Table } from 'react-bootstrap'\n\n\nconst BlogList = () => {\n  const blogs = useSelector((state) => state.blogs).sort((a, b) => b.likes - a.likes)\n\n  return (\n    <div className=\"container\">\n\n      <Table striped bordered hover >\n        <h1>{'Blogs'}</h1>\n        <tbody>\n          {blogs.map(blog => (\n            <tr key={blog.id} >\n              <td  >\n                <Link to={`/blogs/${blog.id}`}>\n                  {`${blog.title} by ${blog.user.name}`}\n                </Link>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default BlogList\n","import React from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport localDB from '../utils/localdb'\nimport { userLogout } from '../reducers/userReducer'\nimport { setNotification } from '../reducers/notificationReducer'\nimport { Button } from 'react-bootstrap'\n\nconst Menu = () => {\n  const user = localDB.loadUser()\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const handleLougout = async () => {\n    dispatch(setNotification(`logged out, see next time ${user.name}`, 'error'))\n    await dispatch(userLogout())\n    history.push('/about')\n  }\n  const padding = {\n    paddingRight: 5\n  }\n  return (\n    <div>\n      {user ?\n        <div>\n          <Link style={padding} to=\"/about\">{'Home'}</Link>\n          <Link style={padding} to=\"/blogs\">{'Blogs'}</Link>\n          <Link style={padding} to=\"/users\">{'Users'}</Link>\n          <em><b>{`${user.name} has logged in `}</b>\n            <Button id=\"logout-button\" variant=\"primary\" type=\"submit\"\n              onClick={handleLougout} >\n              {'logout'}\n            </Button></em>\n        </div>\n        :\n        <div>\n          <Link style={padding} to=\"/about\">{'Home'}</Link>\n          <Link style={padding} to=\"/login\">{'login'}</Link>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default Menu","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Table } from 'react-bootstrap'\n\nconst UserList = () => {\n  const users = useSelector(state => state.users)\n\n  return (\n    <div>\n      <h2>{'Users'}</h2>\n      <Table striped bordered hover variant=\"dark\">\n        <thead>\n          <tr>\n            <th>{'User Name'}</th>\n            <th> {'Blogs created'} </th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map(user =>\n            <tr key={user.id}>\n              <th  className={'blog'}>\n                <Link to={`/users/${user.id}`}>{user.name}</Link>\n              </th>\n              <th>\n                {user.blogs.length}\n              </th>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default UserList","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link, useParams } from 'react-router-dom'\n\nconst User = () => {\n  const paramId = useParams().id\n  const user = useSelector(state => state.users.find(u => u.id === paramId))\n\n  return (\n    <div>\n      {user ?\n        <div className={'blog'}>\n          <h2>{user.name}</h2>\n          <b>{'Added blogs'}</b>\n          <ul>\n            {user.blogs.map(blog =>\n              <li key={blog.id}>\n                <Link to={`/blogs/${blog.id}`}>\n                  {blog.title}\n                </Link>\n              </li>\n            )}\n          </ul>\n        </div>\n        : null\n      }\n    </div>\n  )\n}\n\nexport default User","import React from 'react'\n\nconst Home = () => (\n  <div className=\"container\">\n    <h1>{'Welcome to my very first web routed deployed application'}</h1>\n    <h2>{'Blogs application for part 7 from Fullstack 2020 course'}</h2>\n\n    <em>{'This application is a very challenging and time taking task, but at the same time it is very educational.'}\n      {' It introduces you to the real world of web application developemt, using router and the handy Redux package'}</em>\n\n    <p>{'For more information about me please visit my '}\n      <a href='https://github.com/PacoZG'>\n        {'GitHub'}\n      </a>\n      {'. and  '}\n      <a href='https://www.linkedin.com/in/francisco-zavala/'>\n        {'LinkedIn'}\n      </a>\n      {' pages.'}</p>\n  </div>\n)\n\nexport default Home","import axios from 'axios'\nimport localdb from '../utils/localdb'\nconst baseUrl = '/api/blogs'\n\n\nconst getConfig = () => {\n  return  {\n    headers: { Authorization: `bearer ${localdb.loadUser().token}` }\n  }\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async (newBlog) => {\n  const response = await axios.post(baseUrl, newBlog, getConfig())\n  return response.data\n}\n\nconst update = async (updatedObject) => {\n  const response = await axios.put(`${baseUrl}/${updatedObject.id}`, updatedObject, getConfig())\n  return response.data\n}\nconst remove = async (id) => {\n  const response = await axios.delete(`${baseUrl}/${id}`, getConfig())\n  return response.data\n}\n\nconst addComment = async (commentedBlog) => {\n  const request = await axios.post(`${baseUrl}/${commentedBlog.id}/comments`, commentedBlog )\n  return request.data\n}\n\nexport default { getAll, create, update, remove, addComment }","import blogService from '../services/blogs'\nimport localdb from '../utils/localdb'\n\nconst blogReducer = (state = [], action) => {\n  console.log('BLOGS STATE IN BLOGREDUCER:', state)\n  console.log('BLOGS ACTION.TYPE IN BLOGREDUCER:', action)\n  switch (action.type) {\n  case 'INIT_BLOGS':\n    return action.data\n  case 'NEW_BLOG':\n    return state.concat(action.data)\n  case 'LIKE': {\n    const id = action.data.id\n    const toChange = state.find((blog) => blog.id === id)\n    const changedBlog = { ...toChange, likes: toChange.likes + 1 }\n    return state.map((blog) => (blog.id !== id ? blog : changedBlog))\n  }\n  case 'DELETE':\n    return state.filter(blog => blog.id !== action.data)\n  case 'COMMENT': {\n    console.log('ACTION DATA inside COMMET:', action.data)\n    const id= action.data.id\n    const blogToComment = state.find ( blog => blog.id === id)\n    const changedBlog = { ...blogToComment, comments: action.data.comments }\n    return state.map((blog) => (blog.id !== id ? blog : changedBlog))\n  }\n  default:\n    return state\n  }\n}\n\nexport const initializeBlogs = () => {\n  return async (dispatch) => {\n    const blogs = await blogService.getAll()\n    dispatch({\n      type: 'INIT_BLOGS',\n      data: blogs,\n    })\n  }\n}\n\nexport const createBlog = (blog) => {\n  return async (dispatch) => {\n    const newBlog = await blogService.create(blog)\n    const newBlogwUser = { ...newBlog, user: localdb.loadUser() }\n    dispatch({\n      type: 'NEW_BLOG',\n      data: newBlogwUser,\n    })\n  }\n}\n\nexport const likeBlog = (blog) => {\n  const updatedBlog = { ...blog, likes: blog.likes + 1 }\n  return async (dispatch) => {\n    const changedBlog = await blogService.update(updatedBlog)\n    dispatch({\n      type: 'LIKE',\n      data: changedBlog,\n    })\n  }\n}\n\nexport const deleteBlog = (blog) => {\n  return async (dispatch) => {\n    await blogService.remove(blog.id)\n    dispatch({\n      type: 'DELETE',\n      data: blog.id,\n    })\n  }\n}\n\nexport const commentBlog = (commentedBlog) => {\n  return async dispatch => {\n    const updatedBlog = await blogService.addComment(commentedBlog)\n    dispatch({\n      type: 'COMMENT',\n      data: updatedBlog\n    })\n  }\n}\n\nexport default blogReducer\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { likeBlog, deleteBlog, commentBlog } from '../reducers/blogReducer'\nimport { setNotification } from '../reducers/notificationReducer'\nimport { useParams } from 'react-router-dom'\nimport { Button } from 'react-bootstrap'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\n\nconst Blog = () => {\n  const id = useParams().id\n  const blog = useSelector(state => state.blogs.find(b => b.id === id))\n  const user = useSelector(state => state.user)\n  const dispatch = useDispatch()\n  const [visible, setVisible] = useState(true)\n  const showTextarea = { display: visible ? 'none' : '' }\n\n  const handleDelete = () => {\n    if (window.confirm(`Remove blog ${blog.title} by ${blog.author}`)) {\n      dispatch(deleteBlog(blog))\n      dispatch(setNotification('Blog has been deleted!', 'success'))\n    }\n  }\n\n  const handleLike = () => {\n    dispatch(likeBlog(blog))\n    dispatch(setNotification(`You liked \"${blog.title}\"`, 'success'))\n  }\n\n  const submitComment = () => {\n    var text = document.getElementById('textarea').value\n    if (text !== '') {\n      const commentedBlog = { ...blog, comments: blog.comments.concat(text) }\n      setVisible(!visible)\n      dispatch(commentBlog(commentedBlog))\n    }\n  }\n  return (\n    <div>\n      {blog ?\n        <TableContainer component={Paper}>\n          <Table >\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\" colSpan=\"2\">\n                  <b>{blog.title}{', by '} {blog.author}</b>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                <TableCell colSpan=\"2\">\n                  {'URL: '}<a href={`${blog.url}`}>{`${blog.url}`}</a>{', for more info'}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>{blog.likes}{' likes'}</TableCell>\n                <TableCell>\n                  <Button id=\"like-button\" variant=\"primary\" onClick={handleLike}>\n                    {'like'} </Button>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n            <TableRow>\n              <TableCell><b>{`Added by ${blog.author}`}</b></TableCell>\n              {blog && blog.user.id === user.id ?\n                <TableCell>\n                  <Button id=\"delete-button\" variant=\"primary\" onClick={handleDelete}>\n                    {'delete'} </Button>\n                </TableCell>\n                : null}\n            </TableRow>\n          </Table>\n        </TableContainer>\n        : null}\n      <div>\n        {blog ?\n          <TableContainer component={Paper}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell><b>{'Comments'}</b></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {blog.comments.map((comment, i) =>\n                  <TableRow key={i}>\n                    <TableCell><li>{comment}</li> </TableCell>\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          : null}\n      </div>\n      <textarea style={showTextarea} id={'textarea'} className={'textarea'} placeholder=\"Make a comment\" ></textarea>\n      {visible ?\n        <div>\n          <TableContainer component={Paper}>\n            <Table >\n              <TableBody>\n                <TableRow>\n                  <TableCell>\n                    <Button variant=\"primary\" onClick={() => setVisible(!visible)}>{'Comment'}</Button>\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n        :\n        <div>\n          <TableContainer component={Paper}>\n            <Table >\n              <TableBody>\n                <TableRow>\n                  <TableCell>\n                    <Button variant=\"primary\" type=\"submit\" onClick={() => { submitComment() }}>{'Submit'}</Button>\n                  </TableCell>\n                  <TableCell>\n                    <Button variant=\"primary\" type=\"submit\" onClick={() => setVisible(!visible)}>{'Cancel'}</Button>\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default Blog\n","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then((response) => response.data)\n}\n\nexport default { getAll }\n","import userService from '../services/users'\n\nconst usersReducer = (state = [], action) => {\n  //console.log('ACTION DATA IN USERSSSREDUCER:', action.data)\n  //console.log('STATE OF STATE IN USERSSSREDUCER:',state)\n  switch (action.type) {\n  case 'INIT_USERS':\n    return action.data\n  default:\n    return state\n  }\n}\n\nexport const initializeUsers = () => {\n  return async (dispatch) => {\n    const users = await userService.getAll()\n    dispatch({\n      type: 'INIT_USERS',\n      data: users,\n    })\n  }\n}\n\nexport default usersReducer\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport './index.css'\n// components\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\nimport BlogList from './components/BlogList'\nimport Menu from './components/Menu'\nimport UserList from './components/UserList'\nimport User from './components/User'\nimport Home from './components/Home'\nimport Blog from './components/Blog'\n//reducers\nimport { initializeUsers } from './reducers/usersReducer'\nimport { initializeBlogs, createBlog } from './reducers/blogReducer'\nimport { setNotification } from './reducers/notificationReducer'\n\nconst App = () => {\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(initializeBlogs())\n    dispatch(initializeUsers())\n  }, [dispatch])\n  const user = useSelector((state) => state.user)\n\n  const addBlog = (blogObject) => {\n    dispatch(createBlog(blogObject))\n    dispatch(\n      setNotification(`a new blog posted: ${blogObject.title} by ${blogObject.author}`, 'success')\n    )\n  }\n\n\n  return (\n    <div className={'container'}>\n      {user ?\n        <Router>\n          <Notification />\n          <Menu />\n          <Switch>\n            <Route path=\"/blogs/:id\">\n              <Blog />\n            </Route>\n            <Route path=\"/users/:id\">\n              <User />\n            </Route>\n            <Route path=\"/blogs\">\n              <BlogForm createBlog={addBlog} />\n              <BlogList />\n            </Route>\n            <Route path=\"/users\">\n              <UserList />\n            </Route>\n            <Route path='/'>\n              <Home />\n            </Route>\n          </Switch>\n        </Router>\n        :\n        <Router>\n          <Notification />\n          <Menu />\n          <Switch>\n            <Route path='/about'>\n              <Home />\n            </Route>\n            <Route path='/login'>\n              <LoginForm />\n            </Route>\n            <Route path='/'>\n              <Home />\n            </Route>\n          </Switch>\n        </Router>\n      }\n    </div>\n  )\n}\n\nexport default App\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport blogReducer from './reducers/blogReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport usersReducer from './reducers/usersReducer'\nimport userReducer from './reducers/userReducer'\n\nconst reducer = combineReducers({\n  users: usersReducer,\n  blogs: blogReducer,\n  notification: notificationReducer,\n  user: userReducer,\n})\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}