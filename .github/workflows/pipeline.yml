name: Deploying pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches: [master]
    types: [opened, synchronize]

jobs:
  simple_deployment_pipeline:
    name: Deployment pipeline
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: npm install
        run: npm install
      - name: lint
        run: npm run eslint
      - name: Building for production
        run: npm run build
      - name: Local tests
        run: npm run test
        env:
          NODE_ENV: 'test'
          TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
          SECRET: ${{ secrets.SECRET }}
      - name: E2E tests
        uses: cypress-io/github-action@v2
        with:
          command: npm run test:e2e
          start: npm run start:test, npm start
          wait-on: 'http://localhost:3001'
        env:
          NODE_ENV: 'test'
          TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
          SECRET: ${{ secrets.SECRET }}
      - name: Deployment to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message, ', '), '#skip') }}
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: 'bloglist-pipeline' # Must be unique in Heroku
          heroku_email: "sirpaquillo1@yahoo.com.mx"
          dontuseforce: false
          procfile: 'web: npm run production'
          # healthcheck: "https://bloglist-pipeline.herokuapp.com/health"
          # checkstring: "ok"
          delay: 5
          rollbackonhealthcheckfailed: true
        env:
          NODE_ENV: 'production'
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
